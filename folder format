repo/
├─ pyproject.toml
├─ README.md
├─ .env.example
├─ src/
│  ├─ app/                      # composition root (wiring, CLI, API)
│  │  ├─ __init__.py
│  │  ├─ config.py              # load env; no SDK deps
│  │  ├─ factory.py             # choose provider; assemble services
│  │  └─ cli.py                 # click/typer commands (run bot, backtest, etc.)
│  │
│  ├─ core/                     # pure, provider-agnostic domain
│  │  ├─ __init__.py
│  │  ├─ domain/                # entities/value objects/errors
│  │  │  ├─ __init__.py
│  │  │  ├─ models.py           # Order, OrderRequest, Bar, Side, OrderType...
│  │  │  └─ errors.py           # TradingError, OrderRejected, DataUnavailable
│  │  ├─ ports/                 # interfaces core depends on
│  │  │  ├─ __init__.py
│  │  │  ├─ broker.py           # Broker Protocol
│  │  │  └─ market_data.py      # MarketData Protocol
│  │  ├─ services/              # domain services/orchestrators
│  │  │  ├─ __init__.py
│  │  │  ├─ account.py          # GenericAccount (uses ports only)
│  │  │  └─ portfolio.py        # (optional) PnL, exposure, risk
│  │  └─ usecases/              # thin app-layer entry points
│  │     ├─ __init__.py
│  │     ├─ place_market_order.py
│  │     └─ get_latest_bars.py
│  │
│  ├─ strategies/               # trading logic (talks to core.services)
│  │  ├─ __init__.py
│  │  ├─ base.py                # Strategy Protocol (on_bar, on_tick, etc.)
│  │  └─ sma_cross.py           # example strategy
│  │
│  ├─ adapters/                 # infrastructure implementations
│  │  └─ alpaca/
│  │     ├─ __init__.py
│  │     ├─ broker.py           # implements ports.broker.Broker (alpaca-py)
│  │     ├─ market_data.py      # implements ports.market_data.MarketData
│  │     └─ mappers.py          # SDK ↔ domain model conversions
│  │
│  └─ infra/                    # shared infra not tied to a provider
│     ├─ __init__.py
│     ├─ logging.py             # structlog/logging setup
│     └─ scheduler.py           # run loops, cron-like ticks
│
├─ tests/
│  ├─ unit/                     # core/services with fake ports
│  │  └─ test_account.py
│  └─ integration/              # adapters against paper trading
│     └─ test_alpaca_adapter.py
└─ .github/workflows/ci.yml     # lint, type-check, tests




Clean/Hexagonal Architecture.


###
# Last edit: 
#
# Desc: 
###